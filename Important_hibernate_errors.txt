Important hibernate errors:

0) Always remember in hib mappings(1->*,*->1,1->1,*->*),to map java variables with join on condition column

1) mapped by and join column should not come together.

2) Collection is always lazy by default, change that to eager if u use join fetch.

3) I can use multiple @Entity,@Table for same table student[TESTED]
  @Entity @Table("student")
  public class Student{/* dont forget to create some id*/}

  @Entity @Table("student")
  public class Stud {/* dont forget to create some id*/}
4) mappedBy = "other class java variable name";

5) mappedBy mostly used along with OneToMany,OneToOne
   
6) @JoinColumn(name="db name mostly FK")

7) @JoinColumn is used along with OneToOne,ManyToOne (remember MOJO JO JO )

8) OneToMany & @JoinColumn is possible but it is not a good practice

9) ToOne is simply Object; private Student student;

10) ToMany is always collection; private Set<Student> students = new HashSet<>();

11) QuerySyntaxExpression state is not mapped: lowercase state in @Query.It should be named as entity.

12)  Associations marked as mappedBy must not define database mappings 
   like @JoinTable or @JoinColumn

13) @JoinTable(
  name="USER_POST",  /* name of the new table */
  joinColumns=@JoinColumn(name="USER_ID" /* column in the  */ , referencedColumnName="ID"),
  inverseJoinColumns=@JoinColumn(name="POST_ID", referencedColumnName="ID"))

14)  org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: 
     com.example.demo.entity.Employee.exams
     change that exams to FetchType.EAGER
     